MODULE_FOLDER="/project/NGSpipe2go/modules/"

load MODULE_FOLDER + "ChIPseq/essential.vars.groovy"
load MODULE_FOLDER + "ChIPseq/tool.locations.groovy"

load MODULE_FOLDER + "NGS/fastqc.vars.groovy"
load MODULE_FOLDER + "NGS/fastqc.module.groovy"

load MODULE_FOLDER + "ChIPseq/bowtie1.vars.groovy"
load MODULE_FOLDER + "ChIPseq/bowtie1.module.groovy"

load MODULE_FOLDER + "NGS/bamindexer.vars.groovy"
load MODULE_FOLDER + "NGS/bamindexer.module.groovy"

load MODULE_FOLDER + "NGS/rmdups.vars.groovy"
load MODULE_FOLDER + "NGS/rmdups.module.groovy"

load MODULE_FOLDER + "NGS/extend.vars.groovy"
load MODULE_FOLDER + "NGS/extend.module.groovy"

load MODULE_FOLDER + "NGS/bam2bw.vars.groovy"
load MODULE_FOLDER + "NGS/bam2bw.module.groovy"

load MODULE_FOLDER + "ChIPseq/ipstrength.vars.groovy"
load MODULE_FOLDER + "ChIPseq/ipstrength.module.groovy"

load MODULE_FOLDER + "ChIPseq/phantompeak.vars.groovy"
load MODULE_FOLDER + "ChIPseq/phantompeak.module.groovy"

load MODULE_FOLDER + "ChIPseq/pbc.module.groovy"

load MODULE_FOLDER + "ChIPseq/macs2.vars.groovy"
load MODULE_FOLDER + "ChIPseq/macs2.module.groovy"

load MODULE_FOLDER + "miscellaneous/collectbpipes.module.2.groovy"

load MODULE_FOLDER + "ChIPseq/shinyreports.vars.groovy"
load MODULE_FOLDER + "ChIPseq/shinyreports.module.groovy"

//MAIN PIPELINE TASK
run {
	//if you want to use bowtie2 as a mapper there is no way to get rid of the multi mappers you can use filbowtie2unique module to get uniquely mapping reads before further processing
	//the fastq files should be named after the pattern <samplename>_R1.fastq.gz and <samplename>_R2.fastq.gz for Read 1 and read2
	"%.fastq.gz" * [ FastQC ] + "%.R*.fastq.gz * [ bowtie_pe + BAMindexer + [ bamCoverage, InsertSize , phantompeak , pbc , ipstrength , macs2 ] ] + collectBpipeLogs + shinyReports
}
